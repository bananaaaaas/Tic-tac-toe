from tkinter import messagebox
from tkinter import *

turns = 0
board = [0, 0, 0, 0, 0, 0, 0, 0, 0]

def printBoard(canvas):
    global board
    global turns
    canvas.delete('all')
    canvas.config(bg='light gray')
    board = [0, 0, 0, 0, 0, 0, 0, 0, 0]
    turns = 0
    for i in range(1, 3):
        canvas.create_line(200*i, 10, 200*i, 590, width=2, fill='black')
        canvas.create_line(10, 200*i, 590, 200*i, width=2, fill='black')


def create_O(canvas, x, y):
    
    canvas.create_oval(x-90, y-90, x+90, y+90, width = 4, outline = "blue")


def create_X(canvas, x, y):
    
    canvas.create_line(x-90, y-90, x+90, y+90, width = 4, fill = "red")
    canvas.create_line(x+90, y-90, x-90, y+90, width = 4, fill = "red")


def turn():
    
    global turns
    turns +=1
    if turns % 2 == 0:
        return "O"
    else:
        return "X"


def eventXYToBoard(x,y):
    convertList = [0, 200, 400, 600]
    for i in range(3):
        for h in range(3):
            if convertList[i]<= x <= convertList[i+1] and convertList[h] <= y <= convertList[h+1]:
                return i + 3*h

def click(event):
    global board
    x_coord = {0: 100, 1: 300, 2: 500, 3: 100, 4: 300, 5: 500, 6: 100, 7: 300, 8: 500}
    y_coord = {0: 100, 1: 100, 2: 100, 3: 300, 4: 300, 5: 300, 6: 500, 7: 500, 8: 500}
    if board[eventXYToBoard(event.x, event.y)] == 0:
        
        if turn() == "X":
            create_X(event.widget, x_coord[(eventXYToBoard(event.x, event.y))], y_coord[(eventXYToBoard(event.x, event.y))])
            board[eventXYToBoard(event.x, event.y)] = 1
            check_win(event.widget)

        else:

            create_O(event.widget, x_coord[(eventXYToBoard(event.x, event.y))], y_coord[(eventXYToBoard(event.x, event.y))])
            board[eventXYToBoard(event.x, event.y)] = 2
            check_win(event.widget)
    

def check_win(canvas):
    
    global board
    result = 0
    if board[0] != 0 and board[1] != 0 and board[2] != 0 and board[3] != 0 and board[4] != 0 and board[5] != 0 and board[6] != 0 and board[7] != 0 and board[8] != 0:
        result = 3
    for x in range(3):
        if board[x] == board[x+3] == board[x+6] == 1 or board[x*3] == board[x*3+1] == board[x*3+2] == 1 or board[0] == board[4] == board[8] == 1 or board[2] == board[4] == board[6] == 1:
            result = 1
        elif board[x*3] == board[x*3+1] == board[x*3+2] == 2 or board[x] == board[x+3] == board[x+6] == 2 or board[0] == board[4] == board[8] == 2 or board[2] == board[4] == board[6] == 2:
            result = 2
        

    if result == 1:
        again = messagebox.askyesno("Congratulations Player X wins!", "Would you like to play again?")
        canvas.unbind("<Button-1>")
        restart(canvas, again)
    if result == 2:
        again = messagebox.askyesno("Congratulations Player O wins!", "Would you like to play again?" )
        canvas.unbind("<Button-1>")
        restart(canvas, again)
    if result == 3:
        again = messagebox.askyesno("Congratulations It's a draw!", "Would you like to play again?")
        canvas.unbind("<Button-1>")
        restart(canvas, again)
def instructions(event):
    canvas.bind("<Button-1>", click)
    printBoard(canvas)
	
def restart(canvas, again):
    if again == True:
        canvas.bind("<Button-1>", click)
        printBoard(canvas)
    
def main():
    global canvas
    root = Tk()
    canvasWidth = 600
    canvasHeight = 600
    canvas = Canvas(root, width=canvasWidth, height=canvasHeight)
    root.title("Tic Tac Toe")
    canvas.config(bg='light gray')
    canvas.pack()
    root.resizable(False, False)
    a = canvas.create_text(300, 40, text = "Tic Tac Toe", fill = 'black', font = ("Times New Roman", "36"))
    b = canvas.create_text(300, 110, text = "Welcome to Tic Tac Toe!", fill = 'black', font = ("Times New Roman", "24"))
    c = canvas.create_text(300, 160, text = "This game is played on a 3x3 grid", fill = 'black', font = ("Times New Roman", "24"))
    d = canvas.create_text(300, 210, text = "The first person to get 3 in a row,", fill = 'black', font = ("Times New Roman", "24"))
    e = canvas.create_text(300, 240, text = "horizontally, vertically, or diagonally wins!", fill = 'black', font = ("Times New Roman", "24"))
    f = canvas.create_text(300, 290, text = "Take turns clicking on squares you want filled", fill = 'black', font = ("Times New Roman", "24"))
    g = canvas.create_text(300, 320, text = "Player 1 is X and player 2 is O", fill = 'black', font = ("Times New Roman", "24"))
    h = canvas.create_text(300, 370, text = "If every square is filled in without either", fill = 'black', font = ("Times New Roman", "24"))
    i = canvas.create_text(300, 400, text = "player getting 3 in a row, then it's a tie!", fill = 'black', font = ("Times New Roman", "24"))
    j = canvas.create_text(300, 500, text = "Click anywhere to start!", fill = 'black', font = ("Times New Roman", "40"))
    
    canvas.bind("<Button-1>", instructions)
    root.mainloop()
    root.mainloop()

    
main()
